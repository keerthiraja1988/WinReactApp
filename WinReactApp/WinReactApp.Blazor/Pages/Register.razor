@page "/register1"
@using WinReactApp.ResourceModel.UserAuth
@using WinReactApp.Blazor.Extensions
@using System.Text
@using Newtonsoft.Json

@inject IJSRuntime js
<h1>User Registration</h1>

<EditForm Model="RegisterUserRM" OnSubmit="HandleValidSubmit">

    <div class="form-group mb-3">
        <label>User Name</label>
        <ValidationMessage For="@(() => RegisterUserRM.UserName)" />
        <InputText class="form-control" @bind-Value="RegisterUserRM.UserName" />
    </div>

    <div class="form-group mb-3">
        <label>Email Address</label>
        <ValidationMessage For="@(() => RegisterUserRM.EmailAddress)" />
        <InputText class="form-control" @bind-Value="RegisterUserRM.EmailAddress" />
    </div>

    <div class="form-group mb-3">
        <label>First Name</label>
        <ValidationMessage For="@(() => RegisterUserRM.FirstName)" />
        <InputText class="form-control" @bind-Value="RegisterUserRM.FirstName" />
    </div>
    <div class="form-group mb-3">
        <label>Last Name</label>
        <InputText class="form-control" @bind-Value="RegisterUserRM.LastName" />
        <ValidationMessage For="@(() => RegisterUserRM.LastName)" />
    </div>

    <div class="form-group mb-3">
        <label>Passworde</label>
        <InputText class="form-control" @bind-Value="RegisterUserRM.Password" />
        <ValidationMessage For="@(() => RegisterUserRM.Password)" />
    </div>
    <div class="form-group mb-3">
        <label>Confirm Password</label>
        <InputText class="form-control" @bind-Value="RegisterUserRM.ConfirmPassword" />
        <ValidationMessage For="@(() => RegisterUserRM.ConfirmPassword)" />
    </div>

    <ServerValidator @ref="serverValidator" />
    <ValidationSummary color="red" />

    <div class="form-group mb-3">
        <button type="submit" class="btn btn-primary">Click</button>
    </div>
</EditForm>

@code {
    public RegisterUserResourseModel RegisterUserRM = new RegisterUserResourseModel();
    private ServerValidator serverValidator;

    public async Task HandleValidSubmit()
    {

        await js.InvokeVoidAsync("ClearValidationSummary");

        using (var httpClient = new HttpClient())
        {
            StringContent content = new StringContent(JsonConvert.SerializeObject(RegisterUserRM), Encoding.UTF8, "application/json");

            using (var response = await httpClient.PostAsync("https://localhost:44374/api/UserAuth/registeruser?api-version=1.0", content))
            {
                if (response.StatusCode != System.Net.HttpStatusCode.OK)
                {
                    serverValidator.Validate(response, content);
                }
                else
                {
                    //Navigation.NavigateTo(response.Headers.Location.ToString());
                }
            }
        }
    }

}